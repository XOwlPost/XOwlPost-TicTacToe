openapi: 3.0.0
info:
  title: Example API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string


In this example, the openapi field specifies the version of the OpenAPI specification being used.
The info section provides general information about the API, such as its title and version.

The paths section defines the API endpoints, including the HTTP methods, summaries, parameters,
and response schemas. In this example, there are two endpoints: /users for retrieving all users and /users/{id}
for retrieving a user by ID.

The components section contains reusable components, such as schema definitions. In this example,
there is a User schema defined, which has id and name properties.

The openapi-spec.yaml file serves as a blueprint for generating code, documentation,
and client SDKs using tools like the openapi-generator-cli. It helps ensure consistency and
interoperability when working with APIs.
